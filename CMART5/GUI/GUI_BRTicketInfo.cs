using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DevExpress.XtraPrinting;
using DevExpress.XtraReports.UI;

namespace CMART5
{
    public partial class GUI_BRTicketInfo : Form
    {
        public GUI_BRTicketInfo()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            lookUpEdit1.Properties.DataSource = new CMART5.Cmart5DataContext().SANPHAMs;
            lookUpEdit1.Properties.DisplayMember = "TENSP";
            lookUpEdit1.Properties.ValueMember = "idSANPHAM";
            var status = new[]
                {
                new { Text = "Đủ",Value ="Đủ"},
                new { Text = "Thiếu",Value ="Thiếu"},
                new { Text = "Hư",Value ="Hư"},
                 };
            cbostatus.DisplayMember = "Text";
            cbostatus.ValueMember = "Value";
            cbostatus.DataSource = status;
        }
        public string IDtick;


        Cmart5DataContext dbl;
        int index;

        private void loadData()
        {
            dbl = new Cmart5DataContext();
            var ds = dbl.CTPHIEUNHAPHANGCHINHANHs.Where(st => st.idPHIEUCHINHANH.Contains(this.IDtick)).ToList();
            gcBRticketInfo.DataSource = ds;
            lookUpEdit1.Properties.ValueMember = "idSANPHAM";
            lookUpEdit1.ItemIndex = 1;
            cbostatus.SelectedIndex = 1;
            numb.ResetText();
        }

        private void GUI_HQTicketInfo_Load(object sender, EventArgs e)
        {
            loadData();
            btnSave.Enabled = false;

        }

        private void btnAdd_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            string idpro = lookUpEdit1.EditValue.ToString();
            int qt = int.Parse(numb.Value.ToString());
            string st = cbostatus.SelectedValue.ToString();
             if (idpro == null )
            {
                MessageBox.Show("Vui lòng chọn sản phẩm");
            }
             else if (qt == 0)
             {
                 MessageBox.Show("Vui lòng chọn số lượng sản phẩm");
             }
             else if (st == null)
             {
                 MessageBox.Show("Vui lòng chọn tình trạng sản phẩm");
             }
             else
             {
                 BUS.BUS_Tickets buz = new BUS.BUS_Tickets();
                 buz.AddTBRicketInfo(this.IDtick, idpro, qt, st);
                 loadData();
             }

        }

        private void gvHQticketInfo_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            index = e.FocusedRowHandle;

        }

        private void gvHQticketInfo_DoubleClick(object sender, EventArgs e)
        {
            lookUpEdit1.EditValue = gvBRticketInfo.GetRowCellValue(index, this.IDSP);
            lookUpEdit1.Enabled = false;
            btnAdd.Enabled = false;
            cbostatus.SelectedValue = gvBRticketInfo.GetRowCellValue(index, this.STATUS).ToString();
            numb.Value = (int)gvBRticketInfo.GetRowCellValue(index, this.AMOUNT);
        }


        private void btnSave_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            string idp = lookUpEdit1.EditValue.ToString();
            int qa = int.Parse(numb.Value.ToString());
            string st = cbostatus.SelectedValue.ToString();
             if (idp == null )
            {
                MessageBox.Show("Vui lòng chọn sản phẩm");
            }
             else if (qa == 0)
             {
                 MessageBox.Show("Vui lòng chọn số lượng sản phẩm");
             }
             else if (st == null)
             {
                 MessageBox.Show("Vui lòng chọn tình trạng sản phẩm");
             }
             else
             {
                 BUS.BUS_Tickets buzu = new BUS.BUS_Tickets();
                 buzu.UpdateBRTicketInfo(IDtick, idp, qa, st);
                 loadData();
                 btnAdd.Enabled = true;
                 lookUpEdit1.Enabled = true;
                 btnSave.Enabled = false;
             }
        }

        private void btn_Edit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            btnSave.Enabled = true;
            btnAdd.Enabled = false;
            //string idHQT = gvHQticketInfo.GetRowCellValue(index, this.IDHQ).ToString();
            lookUpEdit1.EditValue = gvBRticketInfo.GetRowCellValue(index, this.IDSP);
            lookUpEdit1.Enabled = false;
            btnAdd.Enabled = false;
            cbostatus.SelectedValue = gvBRticketInfo.GetRowCellValue(index, this.STATUS).ToString();
            numb.Value = (int)gvBRticketInfo.GetRowCellValue(index, this.AMOUNT);

        }

        private void btnPrint_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Report.BRTick report = new Report.BRTick();
            report.DataSource = dbl.CTPHIEUNHAPHANGCHINHANHs.ToList();
            report.ShowPreviewDialog();
        }
    }
}
